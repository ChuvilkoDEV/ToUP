import React, { useState } from 'react';
import InputField from '../../../shared/InputField';
import ImageUtils from '../../../imageUtils';

const images = ImageUtils.importAllImages(require.context('@assets/tasks', false, /\.(svg)$/));

const reactionsList = [
  'üëç', 'üëé', '‚ù§Ô∏è', 'üî•', 'ü•∞', 'üëè', 'üòÅ', 'ü§î', 'ü§Ø', 'üò±', 'ü§¨', 'üò¢', 'üéâ', 'ü§©', 'ü§Æ', 'üí©', 'üôè',
  'üëå', 'üïä', 'ü§°', 'ü•±', 'ü•¥', 'üòç', 'üê≥', '‚ù§Ô∏è‚Äçüî•', 'üåö', 'üå≠', 'üíØ', 'ü§£', '‚ö°Ô∏è', 'üçå', 'üèÜ', 'üíî', 'ü§®',
  'üòê', 'üçì', 'üçæ', 'üíã', 'üñï', 'üòà', 'üò¥', 'üò≠', 'ü§ì', 'üëª', 'üë®‚Äçüíª', 'üëÄ', 'üéÉ', 'üôà', 'üòá', 'üò®', 'ü§ù',
  '‚úçÔ∏è', 'ü§ó', 'üéÖ', 'üéÑ', '‚òÉÔ∏è', 'üíÖ', 'ü§™', 'üóø', 'üÜí', 'üíò', 'üôâ', 'ü¶Ñ', 'üòò', 'üíä', 'üôä', 'üòé', 'üëæ',
  'ü§∑‚Äç‚ôÄÔ∏è', 'ü§∑', 'ü§∑‚Äç‚ôÇÔ∏è', 'üò°'
];

export default function Reactions({ handleTaskSettingMenu }) {
  const [error, setError] = useState(null);
  const [spreadValue, setSpreadValue] = useState('');
  const [subscriberCount, setSubscriberCount] = useState('');
  const [channelLink, setChannelLink] = useState('');
  const [taskTime, setTaskTime] = useState('');

  const [showReactions, setShowReactions] = useState(false);
  const [selectedReactions, setSelectedReactions] = useState([]);

  const toggleReaction = (reaction) => {
    setSelectedReactions(prevState => {
      if (prevState.includes(reaction)) {
        return prevState.filter(r => r !== reaction);
      } else {
        if (prevState.length < 9) {
          return [...prevState, reaction];
        } else {
          return prevState;
        }
      }
    });
  };

  return (
    <>
      <div className='task-form-data'>
        <div className='task-form-data-row'>
          <InputField
            label="–†–∞–∑–±—Ä–æ—Å –∫–æ–ª-–≤–∞"
            type="text"
            placeholder="%"
            logo={images['percentage.svg']}
            value={spreadValue}
            onChange={(e) => setSpreadValue(e.target.value)}
          />
          <InputField
            label="–ö–æ–ª-–≤–æ —Ä–µ–∞–∫—Ü–∏–π"
            type="text"
            placeholder="–†–µ–∞–∫—Ü–∏–∏"
            logo={images['users-alt.svg']}
            value={subscriberCount}
            onChange={(e) => setSubscriberCount(e.target.value)}
          />
        </div>
        <div className='task-form-data-row'>
          <div className='input-field'>
            <label>–†–µ–∞–∫—Ü–∏–∏</label>
            <div className="input-container" onClick={() => setShowReactions(!showReactions)}>
              <img src={images['emoji.svg']} alt="logo" />
              <div className="divider"></div>
              –†–µ–∞–∫—Ü–∏–∏: {selectedReactions.length}
            </div>
            {showReactions && (
              <div className="reactions-popup">
                {reactionsList.map((reaction, index) => (
                  <div
                    key={index}
                    className={`reaction-item ${selectedReactions.includes(reaction) ? 'selected' : ''}`}
                    onClick={() => toggleReaction(reaction)}
                  >
                    {reaction}
                    {selectedReactions.includes(reaction) && <div className="reaction-selected"></div>}
                  </div>
                ))}
              </div>
            )}
          </div>
          <InputField
            label="–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª"
            type="text"
            placeholder="–°—Å—ã–ª–∫–∞"
            logo={images['link.svg']}
            value={channelLink}
            onChange={(e) => setChannelLink(e.target.value)}
          />
        </div>
        <InputField
          label="–í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ"
          type="text"
          placeholder="–í—Ä–µ–º—è –Ω–∞ –∑–∞–¥–∞—á—É"
          logo={images['calendarClock.svg']}
          value={taskTime}
          onChange={(e) => setTaskTime(e.target.value)}
        />
      </div>
      <div className='task-form-btn-box'>
        <button type="submit" className='task-form-submit-button'>
          –ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É
        </button>
        <div className='advanced-setting-btn' onClick={handleTaskSettingMenu}>
          <img src={images['settings.svg']} alt="logo" />
        </div>
      </div>
      {error && <p className="error">{error}</p>}
    </>
  );
}
